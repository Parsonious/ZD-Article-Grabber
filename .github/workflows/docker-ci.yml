name: Deploy to Server

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract Version Information
      id: extract_version
      run: |
        major_version=$(grep 'public const string Major' ./VersionInfo.cs | grep -o '[0-9]\+')
        minor_version=$(grep 'public const string Minor' ./VersionInfo.cs | grep -o '[0-9]\+')
        echo "MAJOR_VERSION=$major_version" >> $GITHUB_ENV
        echo "MINOR_VERSION=$minor_version" >> $GITHUB_ENV

    - name: Build and push Docker image
      run: |
        docker build -t ${{ secrets.DOCKER_USERNAME }}/zd-article-grabber:${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/zd-article-grabber:${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.latest

    - name: Add SSH key
      uses: webfactory/ssh-agent@v0.5.3
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

    - name: Deploy to server
      run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.SSH_PORT }} ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} << 'EOF'
          version="${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.$(date +'%Y%m%d%H%M%S')"
          container_name="zdag-$version"

          # Stop and remove the current container
          current_container=$(docker ps -q --filter "name=zdag")
          if [ ! -z "$current_container" ]; then
            docker stop $current_container
            docker rm $current_container
          fi

          # Run the new container
          docker run -d -p 80:80 -p 443:443 \
          --name $container_name \
          -v /etc/letsencrypt/live/bepio.net/fullchain.pem:/etc/letsencrypt/live/bepio.net/fullchain.pem:ro \
          -v /etc/letsencrypt/live/bepio.net/privkey.pem:/etc/letsencrypt/live/bepio.net/privkey.pem:ro \
          ${{ secrets.DOCKER_USERNAME }}/zd-article-grabber:${{ env.MAJOR_VERSION }}.${{ env.MINOR_VERSION }}.latest

          # Clean up old containers
          old_containers=$(docker ps -a -q --filter "name=zdag" | tail -n +4)
          if [ ! -z "$old_containers" ]; then
            docker rm -f $old_containers
          fi
          EOF

